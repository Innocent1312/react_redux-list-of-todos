{"version":3,"sources":["redux/store.js","api/getTodos.js","api/getUsers.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["handleDelete","payload","type","store","createStore","state","action","Object","objectSpread2","isLoading","hasError","todoList","filter","item","id","URL","getTodos","result","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","ok","Error","concat","status","abrupt","json","stop","getUsers","connect","props","title","completed","userName","userEmail","react_default","createElement","Fragment","className","onClick","TodoList","_ref","todos","map","todo","components_TodoItem","key","user","name","email","startLoad","handleSuccess","scope","components_TodoList","_ref2","todosFromServer","usersFromServer","Promise","all","slicedToArray","find","person","userId","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.24d930a7.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst START_LOAD = 'start_loading';\nconst HANDLE_SUCCESS = 'handle_success';\nconst HANDLE_DELETE = 'handle_delete';\n\nexport const startLoad = () => ({ type: START_LOAD });\n\nexport const handleSuccess = todoList => ({\n  type: HANDLE_SUCCESS, todoList,\n});\n\nexport const handleDelete = payload => ({\n  type: HANDLE_DELETE, payload,\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOAD:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todoList: action.todoList,\n        isLoading: true,\n      };\n\n    case HANDLE_DELETE:\n      return {\n        ...state,\n        todoList: state.todoList.filter(item => item.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  isLoading: false,\n  hasError: false,\n  todoList: [],\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","const URL = 'https://jsonplaceholder.typicode.com/todos';\nconst getTodos = async() => {\n  const result = await fetch(URL);\n\n  if (!result.ok) {\n    throw new Error(`Could not fetch ${URL}, received ${result.status}`);\n  }\n\n  return result.json();\n};\n\nexport default getTodos;\n","const URL = 'https://jsonplaceholder.typicode.com/users';\nconst getUsers = async() => {\n  const result = await fetch(URL);\n\n  if (!result.ok) {\n    throw new Error(`Could not fetch ${URL}, received ${result.status}`);\n  }\n\n  return result.json();\n};\n\nexport default getUsers;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { handleDelete } from '../redux/store';\n\nconst TodoItem = (props) => {\n  // eslint-disable-next-line no-shadow\n  const { id, title, completed, userName, userEmail, handleDelete } = props;\n\n  return (\n    <>\n      <tr>\n        <td>{id}</td>\n        <td>{title}</td>\n        <td>\n          {completed === true\n            ? 'completed'\n            : 'no completed'}\n        </td>\n        <td>\n          {userName}\n        </td>\n        <td>\n          {userEmail}\n        </td>\n        <td>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => handleDelete(id)}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todoList: state.todoList,\n});\n\nTodoItem.propTypes = {\n  handleDelete: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  userName: PropTypes.string.isRequired,\n  userEmail: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, { handleDelete })(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <>\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        id={todo.id}\n        title={todo.title}\n        completed={todo.completed}\n        userName={todo.user.name}\n        userEmail={todo.user.email}\n      />\n    ))}\n  </>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { handleSuccess, handleDelete, startLoad } from './redux/store';\nimport getTodos from './api/getTodos';\nimport getUsers from './api/getUsers';\n\nimport TodoList from './components/TodoList';\n\nconst App = (props) => {\n  const { todoList, isLoading } = props;\n\n  const loadData = async() => {\n    // eslint-disable-next-line no-shadow\n    const { startLoad, handleSuccess } = props;\n\n    startLoad();\n\n    const [\n      todosFromServer,\n      usersFromServer,\n    ] = await Promise.all([getTodos(), getUsers()]);\n\n    handleSuccess(todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: usersFromServer.find(person => person.id === todo.userId),\n      })));\n  };\n\n  return (\n    isLoading\n      ? (\n        <section>\n          <h1>Dynamic list of todos</h1>\n          <div className=\"App container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Id</th>\n                  <th scope=\"col\">Title</th>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">User Name</th>\n                  <th scope=\"col\">User Email</th>\n                  <th scope=\"col\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                <TodoList todos={todoList} />\n              </tbody>\n            </table>\n          </div>\n        </section>\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"btn btn-info\"\n            onClick={loadData}\n          >\n            LOAD\n          </button>\n        </>\n      )\n  );\n};\n\nconst mapStateToProps = state => ({\n  todoList: state.todoList,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nApp.propTypes = {\n  startLoad: PropTypes.func.isRequired,\n  handleSuccess: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    startLoad,\n    handleSuccess,\n    handleDelete,\n  }\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}