{"version":3,"sources":["api/getData.js","redux/store.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TODOS_URL","USERS_URL","getTodos","result","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","ok","Error","concat","status","abrupt","json","stop","getUsers","_context2","store","createStore","state","action","type","Object","objectSpread2","isLoading","hasError","todoList","filter","item","id","payload","applyMiddleware","thunk","connect","handleDelete","props","title","completed","userName","userEmail","react_default","createElement","className","onClick","TodoList","_ref","todos","map","todo","components_TodoItem","key","user","name","email","loadTodos","dispatch","_ref2","todosFromServer","usersFromServer","Promise","all","slicedToArray","find","person","userId","scope","components_TodoList","Fragment","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bd6ad87e.chunk.js","sourcesContent":["const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getTodos = async() => {\n  const result = await fetch(TODOS_URL);\n\n  if (!result.ok) {\n    throw new Error(`Could not fetch ${TODOS_URL}, received ${result.status}`);\n  }\n\n  return result.json();\n};\n\nexport const getUsers = async() => {\n  const result = await fetch(USERS_URL);\n\n  if (!result.ok) {\n    throw new Error(`Could not fetch ${USERS_URL}, received ${result.status}`);\n  }\n\n  return result.json();\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getTodos, getUsers } from '../api/getData';\n\nconst START_LOAD = 'START_LOAD';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_DELETE = 'HANDLE_DELETE';\n\nexport const startLoad = () => ({ type: START_LOAD });\n\nexport const handleSuccess = todoList => ({\n  type: HANDLE_SUCCESS, todoList,\n});\n\nexport const handleDelete = payload => ({\n  type: HANDLE_DELETE, payload,\n});\n\nexport const loadTodos = () => async(dispatch) => {\n  dispatch(startLoad());\n\n  const [\n    todosFromServer,\n    usersFromServer,\n  ] = await Promise.all([\n    getTodos(),\n    getUsers(),\n  ]);\n\n  dispatch(handleSuccess(todosFromServer.map(todo => (\n    {\n      ...todo,\n      user: usersFromServer.find(person => person.id === todo.userId),\n    }))));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOAD:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todoList: action.todoList,\n        isLoading: true,\n      };\n\n    case HANDLE_DELETE:\n      return {\n        ...state,\n        todoList: state.todoList.filter(item => item.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  isLoading: false,\n  hasError: false,\n  todoList: [],\n};\n\nconst store = createStore(reducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { handleDelete } from '../redux/store';\n\nconst TodoItem = (props) => {\n  // eslint-disable-next-line no-shadow\n  const { id, title, completed, userName, userEmail, handleDelete } = props;\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{title}</td>\n      <td>\n        {completed === true\n          ? 'completed'\n          : 'no completed'}\n      </td>\n      <td>{userName}</td>\n      <td>{userEmail}</td>\n      <td>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todoList: state.todoList,\n});\n\nTodoItem.propTypes = {\n  handleDelete: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  userName: PropTypes.string.isRequired,\n  userEmail: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, { handleDelete })(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => todos.map(todo => (\n  <TodoItem\n    key={todo.id}\n    id={todo.id}\n    title={todo.title}\n    completed={todo.completed}\n    userName={todo.user.name}\n    userEmail={todo.user.email}\n  />\n));\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadTodos } from './redux/store';\n\nimport TodoList from './components/TodoList';\n\nconst App = ({ todoList, isLoading, loadTodos }) => (\n  isLoading\n    ? (\n      <section>\n        <h1>Dynamic list of todos</h1>\n        <div className=\"App container\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">User Name</th>\n                <th scope=\"col\">User Email</th>\n                <th scope=\"col\">Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              <TodoList todos={todoList} />\n            </tbody>\n          </table>\n        </div>\n      </section>\n    ) : (\n      <>\n        <button\n          type=\"button\"\n          className=\"btn btn-info\"\n          onClick={async() => {\n            await loadTodos();\n          }}\n        >\n          LOAD\n        </button>\n      </>\n    )\n);\n\nconst mapStateToProps = state => ({\n  todoList: state.todoList,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nApp.propTypes = {\n  loadTodos: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  { loadTodos }\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}